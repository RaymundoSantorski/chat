{"version":3,"sources":["actions/types.js","hooks/useForm.jsx","components/auth/Login.jsx","actions/socketIO.js","components/auth/Register.jsx","components/chat/Chat.jsx","components/chat/Chats.jsx","components/nav/Navbar.jsx","routes/LoggedRouter.jsx","routes/PublicRouter.jsx","App.jsx","reducers/socketReducer.js","store/store.js","index.js"],"names":["types","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Login","dispatch","useDispatch","password","user","formValues","handleChange","className","type","onChange","placeholder","onClick","payload","Register","Chat","setTo","to","messages","socket","setMessages","last","users","useSelector","state","sockets","view","useRef","useEffect","current","scrollIntoView","aux","find","id","lastMessage","slice","pop","read","mess","console","log","ref","map","message","sender","autoComplete","trim","length","emit","Chats","keys","Object","key","active","Navbar","online","close","show","setShow","LoggedRouter","history","useHistory","setUsers","setOnline","userTo","setUserTo","lastSender","setLastSender","JSON","parse","localStorage","getItem","undefined","setSocket","io","connect","transports","replace","connected","on","list","from","obj","setItem","stringify","PublicRouter","exact","path","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.154ad75f.chunk.js","sourcesContent":["export const types = {\r\n    setSocket: '[socket] set'\r\n}","import {useState} from 'react';\r\n\r\nconst useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setSocketIO } from '../../actions/socketIO';\r\nimport useForm from '../../hooks/useForm';\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleChange] = useForm({\r\n        password: '',\r\n        user: ''\r\n    });\r\n    const {password, user} = formValues;\r\n\r\n    const handleLogin = () => {\r\n        dispatch(setSocketIO(user));\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginScreen\">\r\n            <p>Iniciar sesión</p>\r\n            <input \r\n                type=\"text\"\r\n                name=\"user\"\r\n                value={user}\r\n                onChange={handleChange}\r\n                placeholder=\"Nombre de usuario\"\r\n            />\r\n            <input \r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n                placeholder=\"Contraseña\"\r\n            />\r\n            <button onClick={handleLogin}>\r\n                Iniciar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"./types\";\r\n\r\nexport const setSocketIO = (socket) => ({\r\n    type: types.setSocket,\r\n    payload: socket\r\n});","import React from 'react'\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div>\r\n            Register\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useForm from '../../hooks/useForm';\r\n\r\nexport const Chat = ({setTo, to, messages = [], socket, setMessages, last, users}) => {\r\n\r\n\r\n    const { socket: name } = useSelector(state => state.sockets);\r\n    const [{value}, handleChange, reset] = useForm({\r\n        value: ''\r\n    });\r\n    const view = useRef();\r\n\r\n    const sendMessage = () => {\r\n        if(value.trim().length > 0){\r\n            setMessages((mess) => {\r\n                return {\r\n                    ...mess,\r\n                    [to.user]: [...mess[to.user] || [], {value, sender: name, read: true}]\r\n                }\r\n            });\r\n            socket.emit('message', {\r\n                to: to.id,\r\n                value\r\n            });\r\n            reset();\r\n        }\r\n        view.current.scrollIntoView(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(to?.user === last){\r\n            view.current.scrollIntoView(false);\r\n        }\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        const aux = users.find(({user}) => user === to.user);\r\n        if(aux && !to.id){\r\n            setTo(aux);\r\n        }else if(!aux && to.id){\r\n            setTo({\r\n                user: to.user,\r\n                id: null\r\n            })\r\n        }\r\n    }, [users, setTo, to]);\r\n\r\n    useEffect(() => {\r\n        const aux = messages;\r\n        const lastMessage = aux.slice().pop();\r\n        if(lastMessage && !lastMessage.read){\r\n            lastMessage.read = true;\r\n            setMessages((mess) => {\r\n                console.log(lastMessage);\r\n                return {\r\n                    ...mess,\r\n                    [to.user]: [...aux]\r\n                }\r\n            });\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"viewMessages\" ref={view}>\r\n                <div>\r\n                    {\r\n                        messages.map(message => (\r\n                            <div className={message.sender === name ? \"message self\" : \"message\"}>\r\n                                <p className=\"messageText\">{message.value}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                {\r\n                    to.id ? \r\n                    <div className=\"chatSend\">\r\n                        <input \r\n                            name=\"value\"\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Escribe un mensaje\"\r\n                            className=\"messageInput\"\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <button\r\n                            className=\"messageSendButton\"\r\n                            onClick={sendMessage}\r\n                        >{'\\u276F'}</button>\r\n                    </div> : \r\n                    <div className=\"chatSend\">\r\n                        <center><p> El usuario está desconectado </p></center>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Chats = ({messages = {}, setTo, users}) => {\r\n\r\n    const keys = Object.keys(messages);\r\n    return (\r\n        <div className=\"chat\">\r\n            {\r\n                keys.map(key => {\r\n                    const active = users.find(({user}) => user === key);\r\n                    const id = active?.id;\r\n                    const lastMessage = messages[key].slice().pop();\r\n                    return <div onClick={() => {\r\n                            setTo({\r\n                                user: key, \r\n                                id\r\n                            });\r\n                        }}\r\n                        className={id?\"chatItem active\":\"chatItem\"}\r\n                    >\r\n                        <p className=\"chatSender\">{key}</p>\r\n                        <p className={lastMessage.read ? \"lastMessage read\" : \"lastMessage\"}>{lastMessage.value}</p>\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Navbar = ({online, users, setTo, to, close}) => {\r\n\r\n    const { socket: name } = useSelector(state => state.sockets);\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <div className={online ? \"navbar online\" : \"navbar\"}>\r\n            <div className={show ? \"modal show\" : \"modal\"}>\r\n                <div className=\"modalOffset\" onClick={() => {setShow(false)}}></div>\r\n                <div className=\"modalContent\">\r\n                    {\r\n                        users.map(({user, id}) => (\r\n                            <div key={id} className=\"modalUser\" \r\n                                onClick={() => {setTo({user, id})}}\r\n                            >\r\n                                <div className=\"modalUserImg\"></div>\r\n                                { user }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {to && <p className=\"reverse\" onClick={close}>{'\\u279C'}</p>}\r\n                <h3>{to ? `${name} \\u276F ${to.user}` : `${name}`}</h3>\r\n            </div>\r\n            <div \r\n                className={show ? \"burger active\" : \"burger\"}\r\n                onClick={() => {setShow(!show)}}\r\n            >\r\n                <div className=\"burgerTop\"></div>\r\n                <div className=\"burgerMiddle\"></div>\r\n                <div className=\"burgerBottom\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport { Chat } from '../components/chat/Chat';\r\nimport { Chats } from '../components/chat/Chats';\r\n\r\nimport { Navbar } from '../components/nav/Navbar';\r\nconst URL = 'https://apapachatestore.com';\r\n\r\nconst connectSocket = () => {\r\n    const socket = io.connect(URL, {\r\n        transports: ['websocket'],\r\n    });\r\n    return socket;\r\n}\r\n\r\nexport const LoggedRouter = () => {\r\n\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const [online, setOnline] = useState(false);\r\n    const [userTo, setUserTo] = useState(null);\r\n    const [lastSender, setLastSender] = useState(null);\r\n    const [messages, setMessages] = useState(JSON.parse(localStorage.getItem('messages')) || {});\r\n    const { socket: name } = useSelector(state => state.sockets);\r\n    const [socket, setSocket] = useState(undefined);\r\n    if(name && !socket){\r\n        setSocket(connectSocket());\r\n    }else if(!name){\r\n        history.replace('/chat/login');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setOnline(socket?.connected);\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        socket?.on('connect', () => {\r\n            setOnline(true);\r\n            socket.emit('[server] register', {name});\r\n        });\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        socket?.on('disconnect', () => {\r\n            setOnline(false);\r\n        });\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        socket?.on('[client] list', (list) => {\r\n            setUsers(list);\r\n        });\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        socket?.on('message', ({value, from}) => {\r\n            const obj = {\r\n                value,\r\n                sender: from,\r\n                read: false\r\n            }\r\n            setLastSender(from);\r\n            setMessages((mess) => {\r\n                return {\r\n                    ...mess,\r\n                    [from]: [...mess[from] || [], obj]\r\n                }\r\n            });\r\n        });\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('messages', JSON.stringify(messages));\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        for(let user of users){\r\n            console.log(user);\r\n            if(user?.user === userTo?.user){\r\n                setUserTo({\r\n                    ...userTo,\r\n                    id: user.id\r\n                })\r\n            }\r\n        }\r\n    }, [users]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar \r\n                online={online} \r\n                users={users} \r\n                setTo={setUserTo} \r\n                to={userTo} \r\n                close={() => {setUserTo(null)}} \r\n            />\r\n            {\r\n                userTo \r\n                ? <Chat \r\n                    setTo={setUserTo} \r\n                    to={userTo} \r\n                    socket={socket}\r\n                    messages={messages[userTo.user]}\r\n                    setMessages={setMessages}\r\n                    last={lastSender}\r\n                    users={users}\r\n                />\r\n                : <Chats \r\n                    messages={messages} \r\n                    setTo={setUserTo}\r\n                    users={users}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { Login } from '../components/auth/Login';\r\nimport { Register } from '../components/auth/Register';\r\nimport { LoggedRouter } from './LoggedRouter';\r\n\r\nexport const PublicRouter = () => {\r\n\r\n    const { socket: name } = useSelector(state => state.sockets);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/chat/login\">\r\n                        {name ? <Redirect to=\"/chat/\" /> : <Login />}\r\n                    </Route>\r\n                    <Route exact path=\"/chat/register\">\r\n                        {name ? <Redirect to=\"/chat/\" /> : <Register />}\r\n                    </Route>\r\n                    <Route path=\"/chat/\">\r\n                        <LoggedRouter />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { PublicRouter } from './routes/PublicRouter';\r\nexport const App = () => {\r\n    return (\r\n        <PublicRouter />\r\n    )\r\n}\r\n","import { types } from \"../actions/types\";\r\n\r\nconst initialState = {}\r\n\r\nexport const socketReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.setSocket:\r\n            return {\r\n                ...state,\r\n                socket: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport { socketReducer } from '../reducers/socketReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst reducers = combineReducers({\r\n    sockets: socketReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App.jsx';\nimport { store } from './store/store';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}